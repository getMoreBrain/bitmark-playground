{
    "simpleTerms": {
        "type_identifier": "type",
        "predefined_type": "type",

        "namespace": "scope",
        "\"module\"": "scope",

        "shorthand_property_identifier": "variable",

        "\"var\"": "modifier",
        "\"let\"": "modifier",
        "\"extends\"": "modifier",
        "\"const\"": "modifier",
        "\"static\"": "modifier",
        "\"public\"": "modifier",
        "\"private\"": "modifier",
        "\"protected\"": "modifier",
        "\"readonly\"": "modifier",

        "number": "number",
        "string": "string",
        "escape_sequence": "string",
        "template_string": "string",
        "template_substitution": "string",
        "regex": "string",
        "comment": "comment",
        "hash_bang_line": "comment",

        "true": "constant",
        "false": "constant",
        "null": "constant",
        "undefined": "constant",

        "\"as\"": "control",
        "\"if\"": "control",
        "\"do\"": "control",
        "\"else\"": "control",
        "\"while\"": "control",
        "\"for\"": "control",
        "\"return\"": "control",
        "\"break\"": "control",
        "\"continue\"": "control",
        "\"throw\"": "control",
        "\"try\"": "control",
        "\"catch\"": "control",
        "\"finally\"": "control",
        "\"switch\"": "control",
        "\"case\"": "control",
        "\"default\"": "control",
        "\"export\"": "control",
        "\"import\"": "control",
        "\"from\"": "control",
        "\"yield\"": "control",
        "\"async\"": "control",
        "\"await\"": "control",
        "\"debugger\"": "control",

        "this": "operator",
        "\"class\"": "operator",
        "\"type\"": "operator",
        "\"enum\"": "operator",
        "\"function\"": "operator",
        "\"interface\"": "operator",
        "\"implements\"": "operator",
        "\"declare\"": "operator",

        "\"in\"": "operator",
        "\"instanceof\"": "operator",
        "\"of\"": "operator",
        "\"new\"": "operator",
        "\"delete\"": "operator",
        "\"typeof\"": "operator",
        "\"get\"": "operator",
        "\"set\"": "operator",

        "\"=\"": "operator",
        "\"+=\"": "operator",
        "\"-=\"": "operator",
        "\"*=\"": "operator",
        "\"/=\"": "operator",
        "\"%=\"": "operator",
        "\"<<=\"": "operator",
        "\">>=\"": "operator",
        "\">>>=\"": "operator",
        "\"&=\"": "operator",
        "\"^=\"": "operator",
        "\"|=\"": "operator",
        "\"!\"": "operator",
        "\"+\"": "operator",
        "\"-\"": "operator",
        "\"*\"": "operator",
        "\"/\"": "operator",
        "\"%\"": "operator",
        "\"==\"": "operator",
        "\"===\"": "operator",
        "\"!=\"": "operator",
        "\"!==\"": "operator",
        "\">=\"": "operator",
        "\"<=\"": "operator",
        "\"=>\"": "operator",
        "\">\"": "operator",
        "\"<\"": "operator",
        "\":\"": "operator",
        "\"?\"": "operator",
        "\"&&\"": "operator",
        "\"||\"": "operator",
        "\"&\"": "operator",
        "\"~\"": "operator",
        "\"^\"": "operator",
        "\">>\"": "operator",
        "\">>>\"": "operator",
        "\"<<\"": "operator",
        "\"|\"": "operator",
        "\"++\"": "operator",
        "\"--\"": "operator",
        "\"...\"": "operator",

        "\"(\"": "punctuation",
        "\")\"": "punctuation",
        "\"{\"": "punctuation",
        "\"}\"": "punctuation",
        "\";\"": "punctuation",
        "\"[\"": "punctuation",
        "\"]\"": "punctuation",
        "\".\"": "punctuation",
        "\",\"": "punctuation",
        "\"${\"": "punctuation"
    },

    "complexTerms": ["identifier", "property_identifier", "super"],

    "complexScopes": {
        "class > identifier": "type",
        "new_expression > call_expression > identifier": "type",
        "jsx_opening_element > identifier": "type",
        "jsx_closing_element > identifier": "type",
        "jsx_self_closing_element > identifier": "type",

        "nested_type_identifier > identifier": "scope",

        "identifier": "variable",
        "property_identifier": "variable",
        "member_expression > property_identifier": "variable",
        "jsx_attribute > property_identifier": "variable",

        "call_expression > identifier": "function",
        "call_expression > super": "function",
        "function > identifier": "function",
        "generator_function > identifier": "function",
        "method_definition > property_identifier": "function",
        "call_expression > member_expression > property_identifier": "function",
        "method_signature > property_identifier": "function",
        "function_signature > identifier": "function"
    }
}
